/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  `    |  1  |  2  |  3   |  4   |  5   |                         |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                         |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                         |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |        | ExtPw |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |        | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp ESCAPE  &kp N1  &kp N2            &kp N3            &kp N4        &kp N5                                                   &kp N6  &kp N7    &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB     &kp Q   &kp W             &kp E             &kp R         &kp T                                                    &kp Y   &kp U     &kp I      &kp O     &kp P     &kp LBKT
&lt 3 ESC   &kp A   &kp S             &kp D             &kp F         &kp G                                                    &kp H   &kp J     &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT   &kp Z   &kp X             &kp C             &kp V         &kp B             &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &kp N   &kp M     &kp COMMA  &kp DOT   &kp FSLH  &trans
                    &kp LEFT_CONTROL  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND  &kp SPACE           &mo 1              &mo 2   &kp LALT  &kp LCTRL  &kp LGUI
            >;
        };

        lower_layer {
            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp GRAVE  &kp F1     &kp F2     &kp F3       &kp F4    &kp F5                                               &kp F6       &kp F7    &kp F8           &kp F9           &kp F10   &kp F11
&trans     &kp N1     &kp N2     &kp N3       &kp N4    &kp N5                                               &kp N6       &kp N7    &kp N8           &kp N9           &kp N0    &kp F12
&trans     &kp EXCL   &kp AT     &kp HASH     &kp HOME  &kp PAGE_DOWN                                        &kp PAGE_UP  &kp END   &kp KP_MULTIPLY  &kp LPAR         &kp RPAR  &kp PIPE
&trans     &kp EQUAL  &kp MINUS  &kp KP_PLUS  &kp LBRC  &kp RBRC       &kp C_PLAY_PAUSE    &kp K_PLAY_PAUSE  &kp LBKT     &kp RBKT  &kp SEMI         &kp COLON        &kp BSLH  &trans
                      &trans     &trans       &trans    &trans         &trans              &trans            &trans       &trans    &trans           &kp PRINTSCREEN
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |     | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |     | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //              |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR_ALL                    &trans     &trans             &trans            &trans           &trans         &bt BT_CLR
&trans        &kp INS       &kp PSCRN     &kp K_CMENU   &trans        &trans                            &kp PG_UP  &kp C_VOLUME_DOWN  &kp K_MUTE        &kp C_VOLUME_UP  &kp N0         &trans
&trans        &kp LALT      &kp LCTRL     &trans        &trans        &kp CLCK                          &kp PG_DN  &kp K_PREVIOUS     &kp K_PLAY_PAUSE  &kp K_NEXT       &trans         &kp PIPE
&trans        &kp K_UNDO    &kp K_CUT     &kp K_COPY    &kp K_PASTE   &trans          &trans    &trans  &trans     &trans             &trans            &trans           &kp BACKSLASH  &trans
                            &trans        &trans        &trans        &trans          &trans    &trans  &trans     &trans             &trans            &trans
            >;
        };

        upper_layer {
            bindings = <
&trans  &kp F1           &kp F2           &kp F3           &kp F4           &kp F5                    &kp F6    &kp F7    &kp F8  &kp F9         &kp F10     &kp F11
&trans  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMLOCK   &trans                    &trans    &trans    &trans  &kp BACKSPACE  &kp DELETE  &kp F12
&trans  &kp KP_NUMBER_4  &kp KP_NUMBER_6  &kp KP_NUMBER_7  &trans           &trans                    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT      &kp ENTER   &trans
&trans  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_0  &trans  &trans    &trans  &trans    &trans    &trans  &trans         &trans      &trans
                         &trans           &trans           &trans           &trans  &trans    &trans  &trans    &trans    &trans  &trans
            >;
        };
    };
};
